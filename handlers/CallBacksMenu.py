from aiogram import Bot, types
from aiogram.types import Message, CallbackQuery
from aiogram import F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from state.uload_log import Upload_logState
from keyboards.inline_menu_kb import interlinemenu
from utils.database import Database
import os


# from aiogram.types import Message, FSInputFile


async def CallBaksMenu(callback: CallbackQuery, state: FSMContext, bot: Bot):
    if (callback.data == 'upload_log'):
        await callback.message.delete()
        await callback.message.answer(f'<b>–í—ã–±—Ä–∞–Ω–æ</b>: –ó–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥')
        await callback.message.answer(f'üí° <i><b>ADIF —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Ç–µ–≥–∏:</b></i> \n'
                                        f'‚ñ´Ô∏èQSO_DATE \n'
                                        f'‚ñ´Ô∏èTIME_ON \n'
                                        f'‚ñ´Ô∏èCALL \n'
                                        f'‚ñ´Ô∏èMODE \n'
                                        f'‚ñ´Ô∏èSUBMODE (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –≤–∏–¥–æ–≤) \n'
                                        f'‚ñ´Ô∏èBAND \n'
                                        f'‚ñ´Ô∏èGRIDSQUARE \n'
                                        f'‚ñ´Ô∏èMY_GRIDSQUARE \n\n'
                                        f'üíæ <b>–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ üìé –∏ –≤—ã–±–∏—Ä—Ç–µ –≤–∞—à —Ñ–∞–π–ª ADIF –ª–æ–≥–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ —Å–∏—Å—Ç–µ–º—É.</b> \n\n'
                                        f'<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–≥—Ä—É–∂–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—à–Ω–∏–µ <b>–æ—Ç–º–µ–Ω–∞</b></i>')
        await state.set_state(Upload_logState.upload_adif)


    elif (callback.data == 'search_log'):
        await callback.message.delete()
        await callback.message.answer('–ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥—É')


async def upload_adif(message: types.Message, state: FSMContext, bot: Bot):
    db = Database(os.getenv('DATABASE_NAME'))
    users = db.select_user_id(message.from_user.id)
    if message.document:
        file = 'logs\\' + users[1] + '_' + str(message.from_user.id) +'.txt'
        download_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), file)
        await message.bot.download(message.document, destination=download_path)
        await bot.send_message(message.from_user.id, 'üëç –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏...\n\n')
        await bot.send_message(message.from_user.id, '‚úÖ –õ–æ–≥ –ø–æ–ª—É—á–µ–Ω. –û–±—Ä–∞–±–æ—Ç–∫–∞ QRX...\n\n')
        await adif(users[1], download_path, message, bot, state)

        # await state.clear()
        # await bot.send_message(message.from_user.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤—ã–±–∏—Ä—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=interlinemenu())


    else:
        await message.reply("‚õîÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        await state.clear()
        await bot.send_message(message.from_user.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤—ã–±–∏—Ä—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=interlinemenu())




async def adif(table_db: str, log: str, message: Message, bot: Bot, state):
    f = open(log, 'r')
    try:
        log = f.read().upper()
    except:
        pass
    # db = Database(os.getenv('DATABASE_NAME'))

    if ('<EOH>' in log) and ('<QSO_DATE:' in log) and ('<TIME_ON:' in log) and ('<BAND:' in log) and ('CALL:' in log) and ('<EOR>' in log):
        await bot.send_message(message.from_user.id, '‚úÖ ADIF —Ç–µ–≥–∏ –≤ –ª–æ–≥–µ –µ—Å—Ç—å <i>(–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞)</i>...')
        # log = log.replace("<", " <")
        log = log.splitlines()
        print(len(log))

        await state.clear()
    else:
        await bot.send_message(message.from_user.id, '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∫–∞–∫–æ-—Ç–æ –Ω—É–∂–Ω—ã–π —Ç–µ–≥.')
        await bot.send_message(message.from_user.id, 'ü§∑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∑–∞–≥—Ä—É–∑–∏—Ç—å üìé –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π log –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ <b>–æ—Ç–º–µ–Ω–∞</b> –¥–ª—è –≤—ã—Ö–æ–¥—è –∏–∑ —Ä–µ–∂–∏–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–∞ üëá')
