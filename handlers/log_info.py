from aiogram import Bot
from aiogram.types import Message
from aiogram import F
from aiogram import Router
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command, CommandStart, StateFilter
from state.register import RegisterState
from keyboards.inline_menu_kb import interlinemenu
from utils.database import Database
from aiogram.types import CallbackQuery
from fluentogram import TranslatorRunner
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import FSInputFile
from aiogram.fsm.state import default_state
from handlers.create_pdf import create_w100c_pdf, create_w100l_pdf, create_w1000b_pdf, create_w1000u_pdf, create_w25r_pdf
import sqlite3
import os

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router = Router()

@router.callback_query(F.data == 'log_info')
async def main_menu_log_info(callback: CallbackQuery, i18n: TranslatorRunner, bot: Bot):
    db = Database(os.getenv('DATABASE_NAME'))
    user = db.select_user_id(callback.from_user.id)[1]
    try:
        total_qsos_log = db.get_total_qso_log(user)
    except:
        await bot.send_message(callback.from_user.id, f'‚ö†Ô∏è –õ–æ–≥–∏ –ª–∏–±–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ª–∏–±–æ –æ—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.')
    print(total_qsos_log)
#     total_qsos_lotw = db.get_total_qso_lotw(user)
#     total_by_band = db.get_stat_bands(user)
#     band_msg = 'üëÄ <b>–ü–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ª–æ–≥–µ:</b>\n'
#     for i  in range(len(total_by_band)):
#         band_msg += f'‚ñ´Ô∏è {total_by_band[i][0]} ‚ñ´Ô∏è {total_by_band[i][1]} ‚ñ´Ô∏è {total_by_band[i][2]} QSO\n'
#     qsos = total_qsos_log[0][0]
#     lotws = total_qsos_lotw[0][0]
#     dxcc =  db.get_stat_states(user)
#     qra =  db.get_stat_loc(user)
#     cqz =  db.get_stat_cqz(user)
#     ituz =  db.get_stat_ituz(user)
#     uniq_log = db.get_total_uniq_log(user)
#     uniq_lotw = db.get_total_uniq_lotw(user)
#     # await callback.message.delete()
#     await bot.send_message(callback.from_user.id,
#                         f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ª–æ–≥—É <b>{user}</b>\n\n'
#                         f'‚úÖ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ –ª–æ–≥:  <b>{qsos}</b> QSO\n'
#                         f'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ LoTW:  <b>{lotws}</b> CFM\n\n'
#                         f'‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–∑—ã–≤–Ω—ã—Ö –Ω–∞ üõ∞ QO-100:\n'
#                         f'‚ñ´Ô∏è –ø–æ –ª–æ–≥—É:  <b>{len(uniq_log)}</b> \n'
#                         f'‚ñ´Ô∏è –ø–æ LoTW:  <b>{len(uniq_lotw)}</b> \n\n'
#                         f'{band_msg}'
#                         f'\n\nüèÜ <b>–ü–û –î–ò–ü–õ–û–ú–ê–ú –ù–ê üõ∞ QO-100</b>\n'
#                         f'‚ñ´Ô∏èLoTW DXCC:  {len(dxcc)} \n'
#                         f'‚ñ´Ô∏èLoTW QRA –ª–æ–∫–∞—Ç–æ—Ä–æ–≤:  {len(qra)} \n'
#                         f'‚ñ´Ô∏èLoTW CQ –∑–æ–Ω:  {len(cqz)} \n'
#                         f'‚ñ´Ô∏èLoTW ITU –∑–æ–Ω:  {len(ituz)} \n'
#                         f'\n\nüí° <i>–î–ª—è –¥–æ–ø–æ–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã:</i>\n'
#                         f'/stat_states - —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–µ–Ω–Ω—ã—Ö DXCC —Å—Ç—Ä–∞–Ω –∏–∑ LoTW\n'
#                         f'/stat_loc - —Å–ø–∏–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–µ–Ω–Ω—ã—Ö –ª–æ–∫–∞—Ç–æ—Ä–æ–≤ –∏–∑ LoTW\n'
#                         f'/stat_cqz - —Å–ø–∏–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–µ–Ω–Ω—ã—Ö CQ –∑–æ–Ω –∏–∑ LoTW\n'
#                         f'/stat_ituz - —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–µ–Ω–Ω—ã—Ö ITU –∑–æ–Ω –∏–∑ LoTW\n'
#                         f'/stat_ru - CFM –†–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä–µ–≥–∏–æ–Ω—ã –≤ LoTW\n'
#                         f'/uniq_log - —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–∑—ã–≤–Ω—ã—Ö –ø–æ –ª–æ–≥—É\n'
#                         f'/uniq_lotw - —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–∑—ã–≤–Ω—ã—Ö –ø–æ LoTW\n'

#                         )
# except:
#     await bot.send_message(callback.from_user.id, f'‚ö†Ô∏è –õ–æ–≥–∏ –ª–∏–±–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ª–∏–±–æ –æ—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.')